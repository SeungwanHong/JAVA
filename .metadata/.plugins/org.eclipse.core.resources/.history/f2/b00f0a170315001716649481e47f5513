package server.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class BoardDao {

	private static final String DB_URL = "jdbc:oracle:thin:@localhost:1521:orcl";
	private static final String DB_USER = "hsw";
	private static final String DB_PASSWORD = "hsw";

	private Connection getConnection() throws SQLException {
		Connection conn = DriverManager.getConnection(DB_URL, DB_USER, DB_PASSWORD);
		return conn;
	}

	public int boardWrite(String title, String contents, String id) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int result = 0;
		try {
			conn = getConnection();
			String sql = "insert into tb_board_demo(BOARDNO,TITLE,CONTENTS,USERID,WRITEDATE,MODDATE)"
					+ "values(CB_BOARD_SEQ.NEXTVAL,?,?,?,sysdate,sysdate);";

			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, title);
			pstmt.setString(2, contents);
			pstmt.setString(3, id);

			result = pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			try {
				pstmt.close();
				conn.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		return result;
	}

	public ArrayList<String> boardView() throws SQLException {
		Connection conn = getConnection();
		String sql = "SELECT BOARDNO,TITLE,USERID,WRITEDATE " + "FROM CB_BOARD";
		PreparedStatement pstmt = conn.prepareStatement(sql);
		ResultSet rs = pstmt.executeQuery();
		String str = "";
		ArrayList<String> list = new ArrayList<>();
		while (rs.next()) {
			String boardno = rs.getString("BOARDNO");
			String title = rs.getString("TITLE");
			String userid = rs.getString("USERID");
			String writedate = rs.getString("WRTITEDATE");

			str = boardno + "\t" + title + "\t" + userid + "\t" + writedate;
			list.add(str);

		}
		return list;
	}

	public boolean boardMod(int index, String id, String title, String contents) throws SQLException {
		Connection conn = getConnection();
		if (myBoardCheck(index, id)) {// 내글 확인 후
			String sql = "UPDATE TB_BOARD_DEMO SET TITLE = ? , CONTENTS = ? WHERE BIDX = ? ";
			PreparedStatement pstmt = conn.prepareStatement(sql);

			pstmt.setString(1, title);
			pstmt.setString(2, contents);
			pstmt.setInt(3, index);

			pstmt.executeUpdate(); // 성공이면 1

			pstmt.close();
			conn.close();

			return true; // 변경성공
		}

		else
			return false; // 변경 실패(내 글이아니다.)
	}

	public boolean boardDel(int index, String id) throws SQLException {
		Connection conn = getConnection();
		if (myBoardCheck(index, id)) {
			String sql = "DELETE FROM TB_BOARD_DEMO WHERE BIDX = ?";
			PreparedStatement pstmt = conn.prepareStatement(sql);

			pstmt.setInt(1, index);
			int result = pstmt.executeUpdate(); // 성공이면 1

			pstmt.close();
			conn.close();

			return true;
		} else
			return false;
	}

	private boolean myBoardCheck(int index, String id) throws SQLException {
		Connection conn = getConnection();
		String sql = "SELECT USERID FROM TB_BOARD_DEMO WHERE BIDX = ? ";// 인덱스에
		// 대한
		// 아이디
		// 가져오기
		PreparedStatement pstmt = conn.prepareStatement(sql);
		pstmt.setInt(1, index);
		ResultSet id_check_rs = pstmt.executeQuery();
		String check_id = "";
		if (id_check_rs.next()) {
			check_id = id_check_rs.getString("USERID");
		}
		id_check_rs.close();
		pstmt.close();
		conn.close();
		if (id.equals(check_id))
			return true;
		else
			return false;
	}

}
